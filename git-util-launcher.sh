#!/bin/sh

# git から情報をファイルに出力し、git-util-mode を起動するスクリプト。
# 引数で任意のファイルを指定することができる。
# 第一引数：ログを出力するディレクトリ
# 第二引数：モード
# 第三引数：ファイルの指定（ログモード時のみ利用）


#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
#	変数定義
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
# ログディレクトリ。
# 引数のままだと分かりづらいので名前のついた変数に格納する。
LOG_DIRECTORY=$1

# モード名。
# 引数のままだと分かりづらいので名前のついた変数に格納する。
MODE=$2

# 特定のファイル名。
# logモード時に、特定のファイルのログのみを閲覧したい場合に指定する。
TARGET_FILE=$3

# ログファイルの絶対パス
LOG_FILE=$LOG_DIRECTORY"/log.gitlog"


#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
#	関数定義
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
#	処理
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
# ログ出力用ディレクトリが正しく指定されているか確認する。
if [ ! -d $LOG_DIRECTORY ]; then
	echo -e "エラー：ログ用に指定されたディレクトリは存在しません。"
	exit 1
fi

#------------------------------------------------------------------------------
# モードが正しく指定されているか確認する。
case $MODE in
	"log" ) ;;
	"reflog" ) ;;
	* ) echo -e "エラー：モードの指定が正しくありません。
与えられたモード ["$MODE"]"
		exit 1 ;;
esac

#------------------------------------------------------------------------------
# ファイルの指定があるなら、そのファイルが存在するかチェックする。
if [ 3 -le $# ]; then
	if [ ! -e $3 ]; then
		# ログ数の指定だけ行いたい場合、ファイルが正しく設定されていないと
		# 終了されると困るので、ファイルが存在しない場合は
		# null を指定しておく。　不格好なので時間に余裕ができたら
		# 引数全てチェックするようなことを考えるかも。
		TARGET_FILE=
#		echo -e "Error!\nReceived file does NOT exist."
#		exit 1
	fi
fi

#------------------------------------------------------------------------------
# ログ数設定
LOG_NUM=
expr "$4" + 1 >/dev/null 2>&1
if [ $? -lt 2 ]; then
	# 数が指定されていればそれを使用する。
	LOG_NUM=-$4
else
	case $4 in
		"all" )
		;;
	# 無指定は 20
	* )
		LOG_NUM=-20
	esac
fi

	

# モードをログに書き込む。
echo $MODE > $LOG_FILE

# リポジトリのルートの絶対パスをログに書き込む。
git rev-parse --show-toplevel >> $LOG_FILE

#------------------------------------------------------------------------------
# モードに応じた gitコマンドを出力。
case "$MODE" in
	"log" )
	echo $TARGET_FILE >> $LOG_FILE
	git log $LOG_NUM --name-status --pretty=format:"%at|%H|%aN|%aE|%n%B\`" \
		$TARGET_FILE >> $LOG_FILE
	;;
	
	"reflog" ) 
	git log $LOG_NUM --name-status -g \
		--pretty=format:"%at|%H|%gN|%gE|%gD|%gs%n%B\`" >> $LOG_FILE
	;;
esac

#------------------------------------------------------------------------------
# xyzzy と git-util-mode 起動
$XYZZYHOME"\xyzzy.exe" -l $XYZZYHOME"/site-lisp/git-util-mode.l" $LOG_FILE
